# mpi = mpic++, VTK 6.2 (alternative compilation, might need modification)

SHELL = /bin/sh

# ---------------------------------------------------------------------
# compiler/linker settings
# specify flags and libraries needed for your compiler

CC =		mpicxx
# Optimized version
CCFLAGS =	-O2 -funroll-loops -fstrict-aliasing -Wall -fPIC #-Wno-unused-result -fPIC
# Debug version
#CCFLAGS =	-Og -g -pg -fPIC
SHFLAGS =	-fPIC
DEPFLAGS =	-M

LINK =		mpicxx
# Optimized version
LINKFLAGS =	-O2 -fPIC
# Debug version
#LINKFLAGS =	-Og -g -pg -fPIC
LIB =		-lstdc++
SIZE =		size

ARCHIVE =		ar
ARFLAGS =		-rcsv
SHLIBFLAGS =	-shared

# ---------------------------------------------------------------------
# LAMMPS-specific settings
# specify settings for LAMMPS features you will use
# if you change any -D setting, do full re-compile after "make clean"

# LAMMPS ifdef settings, OPTIONAL
# see possible settings in doc/Section_start.html#2_2 (step 4)

LMP_INC =	-DLAMMPS_GZIP -DLAMMPS_VTK

# MPI library, REQUIRED
# see discussion in doc/Section_start.html#2_2 (step 5)
# can point to dummy MPI library in src/STUBS as in Makefile.serial
# INC = path for mpi.h, MPI compiler settings
# PATH = path for MPI library
# LIB = name of MPI library

MPI_INC =
MPI_PATH =
MPI_LIB =

# FFT library, OPTIONAL
# see discussion in doc/Section_start.html#2_2 (step 6)
# can be left blank to use provided KISS FFT library
# INC = -DFFT setting, e.g. -DFFT_FFTW, FFT compiler settings
# PATH = path for FFT library
# LIB = name of FFT library

FFT_INC =
FFT_PATH =
FFT_LIB =

# JPEG and/or PNG library, OPTIONAL
# see discussion in doc/Section_start.html#2_2 (step 7)
# only needed if -DLAMMPS_JPEG or -DLAMMPS_PNG listed with LMP_INC
# INC = path(s) for jpeglib.h and/or png.h
# PATH = path(s) for JPEG library and/or PNG library
# LIB = name(s) of JPEG library and/or PNG library

JPG_INC =
JPG_PATH =
JPG_LIB =

# VTK library, OPTIONAL
# INC = path for VTK header files
# PATH = path for VTK library
# LIB = name of VTK library
USE_VTK='ON'
AUTOINSTALL_VTK='ON'
VTK_INC =	-I/work/07931/dunyuliu/ls6/software/usr/local/include/vtk-8.2
#-I/usr/include/vtk-6.2
VTK_PATH =	-L/work/07931/dunyuliu/ls6/software/usr/local/lib64
#-L/usr/lib/x86_64-linux-gnu
#VTK_LIB =	-lvtkCommonCore-6.2 -lvtkIOCore-6.2 -lvtkIOXML-6.2 -lvtkIOLegacy-6.2 -lvtkCommonDataModel-6.2 -lvtkIOParallel-6.2 -lvtkParallelCore-6.2 -lvtkParallelMPI-6.2 -lvtkIOImage-6.2 -lvtkCommonExecutionModel-6.2 -lvtkFiltersCore-6.2 -lvtkIOParallelXML-6.2
VTK_LIB = -lvtkCommonCore-8.2 -lvtkIOCore-8.2 -lvtkIOXML-8.2 -lvtkIOLegacy-8.2 -lvtkCommonDataModel-8.2 -lvtkIOParallel-8.2 -lvtkParallelCore-8.2 -lvtkParallelMPI-8.2 -lvtkIOImage-8.2 -lvtkCommonExecutionModel-8.2 -lvtkFiltersCore-8.2 -lvtkIOParallelXML-8.2  -lvtksys-8.2 -lvtkCommonMisc-8.2 -lvtklz4-8.2 -lvtklzma-8.2 -lvtkzlib-8.2 -lvtkdoubleconversion-8.2 -lvtkCommonTransforms-8.2 -lvtkIOXMLParser-8.2 -lvtkCommonSystem-8.2  -lvtkIOGeometry-8.2   -lvtkIONetCDF-8.2       -lvtkFiltersParallel-8.2       -lvtkexodusII-8.2 -lvtkjsoncpp-8.2      -lvtkNetCDF-8.2     -lvtkFiltersExtraction-8.2 -lvtkCommonMath-8.2  -lvtkFiltersExtraction-8.2    -lvtkFiltersModeling-8.2     -lvtkFiltersGeometry-8.2 -lvtkFiltersSources-8.2 -lvtkFiltersGeneral-8.2 -lvtkhdf5_hl-8.2 -lvtkhdf5-8.2 -lvtkDICOMParser-8.2 -lvtkmetaio-8.2 -lvtkpng-8.2 -lvtktiff-8.2 -lvtkjpeg-8.2 -lvtkexpat-8.2 -lvtkRenderingCore-8.2 -lvtkFiltersStatistics-8.2 -lvtkCommonComputationalGeometry-8.2 -lvtkCommonColor-8.2 -lvtkImagingFourier-8.2 -lvtkImagingCore-8.2


# ---------------------------------------------------------------------
# build rules and dependencies
# no need to edit this section

include	Makefile.package.settings
include	Makefile.package

EXTRA_INC = $(LMP_INC) $(PKG_INC) $(MPI_INC) $(FFT_INC) $(JPG_INC) $(VTK_INC) $(PKG_SYSINC)
EXTRA_PATH = $(PKG_PATH) $(MPI_PATH) $(FFT_PATH) $(JPG_PATH) $(VTK_PATH) $(PKG_SYSPATH)
EXTRA_LIB = $(PKG_LIB) $(MPI_LIB) $(FFT_LIB) $(JPG_LIB) $(VTK_LIB) $(PKG_SYSLIB)

# Path to src files

vpath %.cpp ..
vpath %.h ..

# Link target

$(EXE):	$(OBJ)
	$(LINK) $(LINKFLAGS) $(EXTRA_PATH) $(OBJ) $(EXTRA_LIB) $(LIB) -o $(EXE)
	$(SIZE) $(EXE)

# Library targets

lib:	$(OBJ)
	$(ARCHIVE) $(ARFLAGS) $(EXE) $(OBJ)

shlib:	$(OBJ)
	$(CC) $(CCFLAGS) $(SHFLAGS) $(SHLIBFLAGS) $(EXTRA_PATH) -o $(EXE) \
        $(OBJ) $(EXTRA_LIB) $(LIB)

# Compilation rules

%.o:%.cpp
	$(CC) $(CCFLAGS) $(SHFLAGS) $(EXTRA_INC) -c $<

%.d:%.cpp
	$(CC) $(CCFLAGS) $(EXTRA_INC) $(DEPFLAGS) $< > $@

# Individual dependencies

DEPENDS = $(OBJ:.o=.d)
sinclude $(DEPENDS)
